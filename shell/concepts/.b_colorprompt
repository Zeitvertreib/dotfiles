# echo colorpromt loaded from extern
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]: [\[\033[01;34m\]\w\[\033[00m\]] '
 echo $HOSTNAME;
# cols=$(tput cols) #breite des Schirms
echo -e "`uname -smr`";
# let right=${$cols}-4
# tput cuf $right; echo $cols
centerthecalender=9
if [ -z $centerthecalender ]; then
    let centerspace_cal=$(cal -3| wc -L)/9
    hi_date=$(echo -n date "+%d")
    first_of_date=$($hi_date|cut -c1)
    second_of_date=$($hi_date|cut -c2)
    space_to_center=""
    while [ "$centerspace_cal" -gt "0" ]
        do
            space_to_center="${space_to_center} "
            let centerspace_cal=${centerspace_cal}-1
    done
    echo -e -n "${white}"; cal -3 | sed "s/^/$space_to_center/g" | sed "s/[$first_of_date][$second_of_date]/--/g"
else
    cal -3
fi

function pre_prompt {
korrekturfaktor=-
# relocate #  prompt_x is where to position the cursor to write the clock
# relocate let prompt_x=$(tput cols)-7
# relocate #  Move up one; not sure why we need to do this, but without this, I always
# relocate #  got an extra blank line between prompts
# relocate tput cuu1
# relocate tput sc
# relocate tput cup 0 ${prompt_x}
# relocate tput setaf 4 ; tput bold
# relocate echo -n "["
# relocate tput setaf 1
# relocate echo -n "$(date +%H:%M)"
# relocate tput setaf 4 ; tput bold
# relocate echo -n "]"
# relocate tput rc
export last_exit=$? # letzer exit status

# Virtual ENV stuff
function virtualenv_info(){
    # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Strip out the path and just leave the env name
        venv="${VIRTUAL_ENV##*/}"
    else
        # In case you don't have one activated
        venv=''
    fi
    [[ -n "$venv" ]] && echo "(venv:$venv) "
}

# disable the default virtualenv prompt change
export VIRTUAL_ENV_DISABLE_PROMPT=1
VENV=$(virtualenv_info) # variabe mit dem namen des v-env

newPWD=$(echo $(pwd|tr '/' '\n'|tac|paste -s -d/)) # the reverse promt
# "${PWD}"
local user="whoami"
host=$(echo -n $HOSTNAME | sed -e "s/[\.].*//")
# datenow=$(date "+%a, %d %b %y")

let promptsize=$(echo -n "($user)($VENV)($korrekturfaktor)($last_exit)(${PWD})"| wc -c ) # laenge der prompt
let fillsize=${COLUMNS}-${promptsize}
fill="+"
while [ "$fillsize" -gt "0" ]
    do
        fill="${fill}-"
        let fillsize=${fillsize}-1
done
if [ "$fillsize" -lt "0" ]
    then
        let cutt=${fillsize}
        # newPWD="...$(echo -n $newPWD | sed -e "s/\(^.\{$cutt\}\)\(.*\)/\2/")"
        newPWD="$(echo -n $newPWD | sed -e "s/\(.\{$cutt\}$\)\(.*\)/\2/").."
fi
# my_prompt=" $coldblue\u $green\${fill} $coldblue\$newPWD $green\r\n$green($coldblue\$(date \"+%H:%M\")$green)\$$white "
fancy_prompt() {
  local blue=$(tput setaf 6)
  local green=$(tput setaf 3)
  local reset=$(tput sgr0)
  export PS1=" \[$blue\]\u \[$green\]${VENV}\$last_exit \${fill} \[$blue\]$newPWD\n[\$(date \"+%H:%M\")]\[$reset\]\\$ \[$green\]"

  }
fancy_prompt
}

PROMPT_COMMAND=pre_prompt
# PS1=${PS1}
# Note : As the special chars that draw the corners and line wonÂ¿t appear on a web page, I have put the file in attachement at the bottom of the post.
